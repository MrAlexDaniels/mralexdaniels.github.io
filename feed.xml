<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://al3xdaniels.github.io/</id><title>A Guide To Azure</title><subtitle>A basic and useful guide for Azure resources</subtitle> <updated>2022-11-10T12:07:42-08:00</updated> <author> <name>Alex Daniels</name> <uri>https://al3xdaniels.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://al3xdaniels.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://al3xdaniels.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Alex Daniels </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Creating APIM API using Azure Function Swagger/OpenApi</title><link href="https://al3xdaniels.github.io/posts/apim-swagger/" rel="alternate" type="text/html" title="Creating APIM API using Azure Function Swagger/OpenApi" /><published>2022-10-27T21:10:00-07:00</published> <updated>2022-11-10T12:06:50-08:00</updated> <id>https://al3xdaniels.github.io/posts/apim-swagger/</id> <content src="https://al3xdaniels.github.io/posts/apim-swagger/" /> <author> <name>Alex Daniels</name> </author> <category term="Azure API Management" /> <category term="Azure Functions" /> <summary> What are we trying to accomplish? When importing an API into APIM with swagger/OpenApi it helps to have everything as detailed as possible to eliminate manual changes after import. To do this we can decorate our swagger as much as possible, in this article we will cover how to use OpenApi decorators in Azure Functions. Lets look at the problem As you can see in the image below, we are missing ... </summary> </entry> <entry><title>Using Azure Active Directory For Custom Roles In APIM</title><link href="https://al3xdaniels.github.io/posts/apim-oauth2-custom-roles/" rel="alternate" type="text/html" title="Using Azure Active Directory For Custom Roles In APIM" /><published>2022-10-11T21:10:00-07:00</published> <updated>2022-11-10T12:06:50-08:00</updated> <id>https://al3xdaniels.github.io/posts/apim-oauth2-custom-roles/</id> <content src="https://al3xdaniels.github.io/posts/apim-oauth2-custom-roles/" /> <author> <name>Alex Daniels</name> </author> <category term="Azure API Management" /> <category term="Advanced Policies" /> <category term="JWT Azure Active Directory" /> <summary> What are we trying to accomplish? When we want to limit what a consumer of an API can or cannot do we can accomplish this by creating custom roles in RBAC and issue them within our token. Once issued in our token we can read and apply these roles from within our APIM polcies. Use case A user has access to consume API endpoints but we do not want them to be able to perform DELETE operations. By... </summary> </entry> <entry><title>Policy Fragments In APIM</title><link href="https://al3xdaniels.github.io/posts/apim-policy-fragments/" rel="alternate" type="text/html" title="Policy Fragments In APIM" /><published>2022-09-19T21:10:00-07:00</published> <updated>2022-11-10T12:06:50-08:00</updated> <id>https://al3xdaniels.github.io/posts/apim-policy-fragments/</id> <content src="https://al3xdaniels.github.io/posts/apim-policy-fragments/" /> <author> <name>Alex Daniels</name> </author> <category term="Azure API Management" /> <category term="Policies" /> <summary> In this article we are going to talk about policy fragments and use cases. Let’s start by understanding what a policy fragment is. Policy fragments help you configure policies consistently and maintain policy definitions without the need to repeat or retype XML code. Scenario In this policy we are looking at a JWT token and checking the roles that were included in the token. We are limiting th... </summary> </entry> </feed>
